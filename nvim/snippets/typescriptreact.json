{
    "props": {
        "prefix": "props",
        "body": [
            "/* Props. */",
            "type ${TM_FILENAME_BASE}Props = {",
            "    ${0}",
            "};"
        ]
    },
    "comps": {
        "prefix": "comps",
        "body": [
            " * ${1}.",
            " * @returns Comp.",
            " */",
            "export const ${TM_FILENAME_BASE} = (): JSX.Element =>",
            "    ${0:Lol};",
            "};"
        ]
    },
    "comp": {
        "prefix": "comp",
        "body": [
            "/**",
            " * ${1}.",
            " * @returns Comp.",
            " */",
            "export const ${TM_FILENAME_BASE} = (): JSX.Element => {",
            "    ${2}",
            "",
            "    return (",
            "        ${0}",
            "    );",
            "};"
        ]
    },
    "useState": {
        "prefix": "us",
        "body": "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:initValue});",
        "description": "React useState() hook"
    },
    "useEffect": {
        "prefix": "ue",
        "body": [
            "useEffect(() => {",
            "    $1",
            "}, [${3:dependencies}]);"
        ],
        "description": "React useEffect() hook"
    },
    "useEffect with return": {
        "prefix": "uer",
        "body": [
            "useEffect(() => {",
            "    $1;\n",
            "    return () => {",
            "        $2",
            "    }",
            "}, [${3:dependencies}]);"
        ],
        "description": "React useEffect() hook with return statement"
    },
    "useContext": {
        "prefix": "uc",
        "body": [
            "const $1 = useContext($2);"
        ],
        "description": "React useContext() hook"
    },
    "useRef": {
        "prefix": "ur",
        "body": [
            "const ${1:elName}El = useRef(null);"
        ],
        "description": "React useRef() hook"
    },
    "useCallback": {
        "prefix": "ucb",
        "body": [
            "const ${1:memoizedCallback} = useCallback(",
            "    () => {",
            "        ${2}",
            "    },",
            "    [${3:dependencies}],",
            ");"
        ],
        "description": "React useCallback() hook"
    }
}
